name: Build
on: [push]
jobs:
  build-mac:
    name: Build (macOS)
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: codesign
        id: codesign
        uses: apple-actions/import-codesign-certs@v1
        with: 
          p12-file-base64: ${{ secrets.CERTIFICATES_P12 }}
          p12-password: ${{ secrets.CERTIFICATES_P12_PASSWORD }}
          keychain: ${{ github.run_id }}
          keychain-password: ${{ github.run_id }}
      - name: Install Libs
        run: |
          npm i -g appdmg
          brew install pkgconfig
          brew install libusb
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0"
      - name: Add repos
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/sanjay900/index.json" --name "github" --username "sanjay.govind9@gmail.com" --store-password-in-clear-text  --password "${{ secrets.FEED_GITHUB_TOKEN 
          dotnet nuget add source "https://nuget.avaloniaui.net/repository/avalonia-all/index.json" --name "avalonia nuget"
      - name: Install dependencies
        run: dotnet restore
      - name: Build
        run: |
          dotnet publish -c Release -r osx-x64 -p:PublishSingleFile=true -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true  
          dotnet publish -c Release -r osx-arm64 -p:PublishSingleFile=true -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true  
      - name: Bundle
        run: |
          mkdir out
          lipo -create bin/Release/net7.0/osx-arm64/publish/GuitarConfigurator bin/Release/net7.0/osx-x64/publish/GuitarConfigurator -output out/GuitarConfigurator-macos
      - uses: actions/upload-artifact@v1
        with:
          name: mac
          path: out
  build-linux:
    name: Build (Linux)
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0"
      - name: Add repos
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/sanjay900/index.json" --name "github" --username "sanjay.govind9@gmail.com" --store-password-in-clear-text  --password "${{ secrets.FEED_GITHUB_TOKEN 
          dotnet nuget add source "https://nuget.avaloniaui.net/repository/avalonia-all/index.json" --name "avalonia nuget"
      - name: Install dependencies
        run: dotnet restore
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          dotnet publish -c Release -r linux-x64 -p:PublishSingleFile=true -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true 
          dotnet publish -c Release -r linux-arm -p:PublishSingleFile=true -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true 
          dotnet publish -c Release -r linux-arm64 -p:PublishSingleFile=true -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true 
          mkdir out
          cp bin/Release/net7.0/linux-x64/publish/GuitarConfigurator out/GuitarConfigurator-linux-64
          cp bin/Release/net7.0/linux-arm/publish/GuitarConfigurator out/GuitarConfigurator-linux-arm-32
          cp bin/Release/net7.0/linux-arm64/publish/GuitarConfigurator out/GuitarConfigurator-linux-arm-64
      - uses: actions/upload-artifact@v1
        with:
          name: linux
          path: out
  build-windows:
    name: Build (Windows)
    runs-on: windows-latest
    steps:
      - name: git configure long path
        run: git config --global core.longpaths true
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "7.0"
      - name: Add repos
        run: |
          dotnet nuget add source "https://nuget.pkg.github.com/sanjay900/index.json" --name "github" --username "sanjay.govind9@gmail.com" --store-password-in-clear-text  --password "${{ secrets.FEED_GITHUB_TOKEN 
          dotnet nuget add source "https://nuget.avaloniaui.net/repository/avalonia-all/index.json" --name "avalonia nuget"
      - name: Install dependencies
        run: dotnet restore
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Build
        run: |
          dotnet publish -c Release -r win-x64 -p:PublishSingleFile=true -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true 
          dotnet publish -c Release -r win-x86 -p:PublishSingleFile=true -p:DebugType=None -p:DebugSymbols=false -p:IncludeNativeLibrariesForSelfExtract=true --self-contained true 
          mkdir out
          cp bin/Release/net7.0/win-x64/publish/GuitarConfigurator.exe out/GuitarConfigurator-win-64.exe
          cp bin/Release/net7.0/win-x86/publish/GuitarConfigurator.exe out/GuitarConfigurator-win-32.exe
      - uses: actions/upload-artifact@v1
        with:
          name: windows
          path: out
  release:
    if: contains(github.ref, 'tags/v')
    name: Release Build
    runs-on: ubuntu-latest
    # needs: [build-linux, build-windows]
    needs: [build-linux, build-mac, build-windows]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v1
        with:
          name: windows
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v1
        with:
          name: mac  
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v1
        with:
          name: linux  
      - name: Append version to release
        run: |
          mv ./windows/*.exe ./windows/guitar-configurator-win-${GITHUB_REF##*/}.exe
          mv ./linux/*.AppImage ./linux/guitar-configurator-linux-${GITHUB_REF##*/}.AppImage
          mv ./mac/*.dmg ./mac/guitar-configurator-macOS-${GITHUB_REF##*/}.dmg
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./windows/*
            ./linux/*
            ./mac/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Cleanup windows directory for pages
        run: |
          rm ./windows/guitar-configurator-win-${GITHUB_REF##*/}.exe
      - uses: JamesIves/github-pages-deploy-action@3.7.1
        with:
          SINGLE_COMMIT: true
          CLEAN: true
          CLEAN_EXCLUDE: '["_includes","_layouts","_sass","assets","screenshots",".env",".gitignore","*.html","*.md","Gemfile","Gemfile.lock","_config.yml","adaptor.jpg"]'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages
          FOLDER: windows 


  pre-release:
    name: Release Preview Build
    runs-on: ubuntu-latest
    needs: [build-linux, build-mac, build-windows]
    # needs: [build-linux, build-windows]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v1
        with:
          name: windows
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v1
        with:
          name: mac  
      - name: Download Linux Artifacts
        uses: actions/download-artifact@v1
        with:
          name: linux
      - uses: dev-drprasad/delete-tag-and-release@v0.1.2
        with:
          delete_release: true
          tag_name: preview
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: preview
          prerelease: true
          name: "Preview Build"
          files: |
            ./windows/*.exe
            ./mac/*
            ./linux/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

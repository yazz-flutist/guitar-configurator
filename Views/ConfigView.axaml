<UserControl xmlns="https://github.com/avaloniaui" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:netCore="clr-namespace:GuitarConfiguratorSharp.NetCore"
             xmlns:viewModels="clr-namespace:GuitarConfiguratorSharp.NetCore.ViewModels"
             xmlns:configuration="clr-namespace:GuitarConfiguratorSharp.NetCore.Configuration"
             xmlns:neck="clr-namespace:GuitarConfiguratorSharp.NetCore.Configuration.Neck"
             xmlns:conversions="clr-namespace:GuitarConfiguratorSharp.NetCore.Configuration.Conversions"
             xmlns:dj="clr-namespace:GuitarConfiguratorSharp.NetCore.Configuration.DJ"
             xmlns:ps2="clr-namespace:GuitarConfiguratorSharp.NetCore.Configuration.PS2"
             xmlns:wii="clr-namespace:GuitarConfiguratorSharp.NetCore.Configuration.Wii"
             xmlns:output="clr-namespace:GuitarConfiguratorSharp.NetCore.Configuration.Outputs"
             xmlns:combined="clr-namespace:GuitarConfiguratorSharp.NetCore.Configuration.Outputs.Combined"
             xmlns:system="clr-namespace:System;assembly=System.Runtime"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450" x:DataType="viewModels:ConfigViewModel"
             x:Class="GuitarConfiguratorSharp.NetCore.Views.ConfigView"
             x:CompileBindings="True"
             Background="Transparent">
    <UserControl.Resources>
        <netCore:EnumToStringConverter x:Key="EnumToStringConverter" />
        <netCore:ControllerEnumConverter x:Key="ControllerEnumConverter" />
        <DataTemplate x:Key="ControllerEnumTemplate" DataType="system:Object">
            <TextBlock x:CompileBindings="False">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource ControllerEnumConverter }">
                        <Binding></Binding>
                        <Binding Path="$parent[UserControl].DataContext.DeviceType"></Binding>
                        <Binding Path="$parent[UserControl].DataContext.RhythmType"></Binding>
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="EnumToStringTemplate" DataType="system:Object">
            <TextBlock Text="{Binding Converter={StaticResource EnumToStringConverter }}" />
        </DataTemplate>
        <netCore:OutputTemplateSelector x:Key="OutputTemplates">
            <DataTemplate DataType="{x:Type neck:Gh5NeckInput}">
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Content="GH5 Neck Input: "></Label>
                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{Binding Input}"></Label>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Scl}"
                              Items="{Binding AvailableSclPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Sda}"
                              Items="{Binding AvailableSdaPins}">
                    </ComboBox>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="output:EmptyOutput">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding IsController}">
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding CombinedType}"
                                  Items="{Binding CombinedTypes}"
                                  ItemTemplate="{StaticResource ControllerEnumTemplate}">
                        </ComboBox>
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding IsKeyboard}">
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding MouseAxisType}"
                                  Items="{Binding MouseAxisTypes}">
                        </ComboBox>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding MouseButtonType}"
                                  Items="{Binding MouseButtonTypes}">
                        </ComboBox>
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Key}" Items="{Binding Keys}">
                        </ComboBox>
                        <!-- TODO: Keyboard key from key with detection  -->
                    </StackPanel>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type neck:GhWtTapInput}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="GH WT Tap Input: "></TextBlock>
                    <TextBlock Text="{Binding Input}"></TextBlock>
                    <Button
                        x:CompileBindings="False"
                        Command="{Binding $parent[UserControl].DataContext.ShowPinSelectDialogCommand}"
                        CommandParameter="{Binding}">
                        Change Pin
                    </Button>
                    <NumericUpDown Value="{Binding Pin}" VerticalAlignment="Center"></NumericUpDown>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type dj:DjInput}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="DJ Controller Input: "></TextBlock>
                    <TextBlock VerticalAlignment="Center" Text="{Binding Input}"></TextBlock>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Scl}"
                              Items="{Binding AvailableSclPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Sda}"
                              Items="{Binding AvailableSdaPins}">
                    </ComboBox>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type ps2:Ps2Input}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="PS2 Controller Input: "></TextBlock>
                    <TextBlock VerticalAlignment="Center" Text="{Binding Input}"></TextBlock>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Mosi}"
                              Items="{Binding AvailableMosiPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Miso}"
                              Items="{Binding AvailableMisoPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Sck}"
                              Items="{Binding AvailableSckPins}">
                    </ComboBox>
                    <NumericUpDown Value="{Binding Ack}" VerticalAlignment="Center"></NumericUpDown>
                    <NumericUpDown Value="{Binding Att}" VerticalAlignment="Center"></NumericUpDown>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type wii:WiiInput}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="Wii Controller Input: "></TextBlock>
                    <TextBlock VerticalAlignment="Center" Text="{Binding Input}"></TextBlock>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Scl}"
                              Items="{Binding AvailableSclPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Sda}"
                              Items="{Binding AvailableSdaPins}">
                    </ComboBox>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type configuration:DirectInput}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock VerticalAlignment="Center" Text="Direct Input: "></TextBlock>
                    <StackPanel Orientation="Horizontal" IsVisible="{Binding !IsAnalog}">
                        <ComboBox VerticalAlignment="Center" SelectedItem="{Binding PinMode}"
                                  Items="{Binding DevicePinModes}">
                        </ComboBox>
                    </StackPanel>
                    <Button
                        x:CompileBindings="False"
                        Command="{Binding $parent[UserControl].DataContext.ShowPinSelectDialogCommand}"
                        CommandParameter="{Binding}">
                        Change Pin
                    </Button>
                    <NumericUpDown Value="{Binding Pin}" VerticalAlignment="Center"></NumericUpDown>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:OutputAxis}">
                <StackPanel Orientation="Horizontal">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <StackPanel Orientation="Horizontal" IsVisible="{Binding Trigger}">
                                    <ProgressBar HorizontalAlignment="Stretch" Value="{Binding Value}"
                                                 IsIndeterminate="False" Minimum="0" Maximum="65536" Height="30"
                                                 Width="500" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" IsVisible="{Binding !Trigger}">
                                    <ProgressBar CornerRadius="0 3 3 0" HorizontalAlignment="Stretch"
                                                 Value="{Binding ValueLower}"
                                                 IsIndeterminate="False" Minimum="0" Maximum="32768" Height="30"
                                                 Width="250">
                                        <ProgressBar.RenderTransform>
                                            <ScaleTransform ScaleX="-1"></ScaleTransform>
                                        </ProgressBar.RenderTransform>
                                    </ProgressBar>
                                    <ProgressBar CornerRadius="0 3 3 0" HorizontalAlignment="Stretch"
                                                 Value="{Binding ValueUpper}"
                                                 IsIndeterminate="False" Minimum="0" Maximum="32768" Height="30"
                                                 Width="250" />
                                </StackPanel>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Text="{Binding Value}">
                                </TextBlock>
                            </Grid>

                        </StackPanel>
                        <StackPanel Orientation="Horizontal">
                            <Grid>
                                <StackPanel Orientation="Horizontal" IsVisible="{Binding InputIsUint}">
                                    <ProgressBar HorizontalAlignment="Stretch" Value="{Binding ValueRaw}"
                                                 IsIndeterminate="False" Minimum="0" Maximum="65536" Height="30"
                                                 Width="500" />
                                </StackPanel>
                                <StackPanel Orientation="Horizontal" IsVisible="{Binding !InputIsUint}">
                                    <ProgressBar CornerRadius="0 3 3 0" HorizontalAlignment="Stretch"
                                                 Value="{Binding ValueRawLower}"
                                                 IsIndeterminate="False" Minimum="0" Maximum="32768" Height="30"
                                                 Width="250">
                                        <ProgressBar.RenderTransform>
                                            <ScaleTransform ScaleX="-1"></ScaleTransform>
                                        </ProgressBar.RenderTransform>
                                    </ProgressBar>
                                    <ProgressBar CornerRadius="0 3 3 0" HorizontalAlignment="Stretch"
                                                 Value="{Binding ValueRawUpper}"
                                                 IsIndeterminate="False" Minimum="0" Maximum="32768" Height="30"
                                                 Width="250" />
                                </StackPanel>
                                <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center"
                                           Text="{Binding ValueRaw}">
                                </TextBlock>
                                <Rectangle Margin="{Binding ComputedDeadZoneMargin}" Fill="Red"
                                           HorizontalAlignment="Left" Width="{Binding DeadZoneScaled}"
                                           Height="30" Opacity="0.3">
                                </Rectangle>
                                <Rectangle Margin="{Binding CalibrationMinMaxMargin}" HorizontalAlignment="Left"
                                           Fill="Green" Width="{Binding CalibrationMinMaxWidth}" Height="30"
                                           Opacity="0.3"
                                           IsVisible="{Binding CalibrationText, Converter={x:Static ObjectConverters.IsNotNull}}">
                                </Rectangle>
                            </Grid>

                        </StackPanel>
                        <Slider IsVisible="{Binding !InputIsUint}" Width="500" Value="{Binding OffsetSlider}"
                                Minimum="-32767" Maximum="32768" />
                        <Slider IsVisible="{Binding InputIsUint}" Width="500" Value="{Binding OffsetSlider}"
                                Minimum="0" Maximum="65535" />
                        <Slider IsVisible="{Binding !InputIsUint}" Width="500" Value="{Binding DeadZoneSlider}"
                                Minimum="-32767" Maximum="32768" />
                        <Slider IsVisible="{Binding InputIsUint}" Width="500" Value="{Binding DeadZoneSlider}"
                                Minimum="0" Maximum="65535" />
                        <Slider Width="500" Value="{Binding Multiplier}" Minimum="-4" Maximum="4" />
                        <TextBlock
                            IsVisible="{Binding CalibrationText, Converter={x:Static ObjectConverters.IsNotNull}}"
                            VerticalAlignment="Center" HorizontalAlignment="Center" Text="{Binding CalibrationText}">
                        </TextBlock>

                    </StackPanel>
                    <Button x:CompileBindings="False" Command="{Binding Calibrate}" HorizontalAlignment="Stretch"
                            HorizontalContentAlignment="Center">
                        Calibrate
                    </Button>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type output:OutputButton}">
                <CheckBox IsChecked="{Binding ValueRaw}"></CheckBox>
            </DataTemplate>
            <DataTemplate DataType="{x:Type conversions:DigitalToAnalog}">
                <StackPanel Orientation="Horizontal">
                    <NumericUpDown Value="{Binding Value}" VerticalAlignment="Center"></NumericUpDown>
                    <ContentControl Content="{Binding Child}"
                                    ContentTemplate="{StaticResource OutputTemplates}">
                    </ContentControl>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type conversions:AnalogToDigital}">
                <StackPanel Orientation="Horizontal">
                    <ComboBox HorizontalAlignment="Stretch" Margin="20 20 20 0"
                              SelectedItem="{Binding AnalogToDigitalType}" Items="{Binding AnalogToDigitalTypes}">
                    </ComboBox>
                    <NumericUpDown Value="{Binding Threshold}" VerticalAlignment="Center"></NumericUpDown>
                    <ContentControl Content="{Binding Child}"
                                    ContentTemplate="{StaticResource OutputTemplates}">
                    </ContentControl>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:DjCombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center"
                           Content="DJ Hero Turntable Input">
                    </Label>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:Gh5CombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Content="GH5 Neck Input"></Label>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Scl}"
                              Items="{Binding AvailableSclPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Sda}"
                              Items="{Binding AvailableSdaPins}">
                    </ComboBox>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:GhwtCombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Content="GHWT TapBar Input"></Label>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:Ps2CombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Content="PS2 Controller Input"></Label>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Mosi}"
                              Items="{Binding AvailableMosiPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Miso}"
                              Items="{Binding AvailableMisoPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Sck}"
                              Items="{Binding AvailableSckPins}">
                    </ComboBox>
                    <NumericUpDown Value="{Binding Ack}" VerticalAlignment="Center"></NumericUpDown>
                    <NumericUpDown Value="{Binding Att}" VerticalAlignment="Center"></NumericUpDown>
                </StackPanel>
            </DataTemplate>
            <DataTemplate DataType="{x:Type combined:WiiCombinedOutput}">
                <StackPanel Orientation="Horizontal">
                    <Label VerticalAlignment="Center" VerticalContentAlignment="Center" Content="Wii Controller Input"></Label>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Scl}"
                              Items="{Binding AvailableSclPins}">
                    </ComboBox>
                    <ComboBox VerticalAlignment="Center" SelectedItem="{Binding Sda}"
                              Items="{Binding AvailableSdaPins}">
                    </ComboBox>
                </StackPanel>
            </DataTemplate>
        </netCore:OutputTemplateSelector>
    </UserControl.Resources>
    <Panel>
        <DockPanel HorizontalAlignment="Stretch">
            <ExperimentalAcrylicBorder DockPanel.Dock="Left" Width="240">
                <ExperimentalAcrylicBorder.Material>
                    <ExperimentalAcrylicMaterial TintColor="Black" MaterialOpacity="0.85" TintOpacity="1" />
                </ExperimentalAcrylicBorder.Material>
                <ScrollViewer VerticalAlignment="Center" Margin="0 50 0 0">
                    <StackPanel Margin="0 0 0 40">
                        <StackPanel>
                            <TextBlock HorizontalAlignment="Stretch" Margin="40 40 40 0" Text="Emulation Type"
                                       TextAlignment="Center" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="20 20 20 0"
                                      SelectedItem="{Binding EmulationType}" Items="{Binding EmulationTypes}">
                            </ComboBox>
                        </StackPanel>
                        <StackPanel IsVisible="{Binding IsController}">
                            <TextBlock HorizontalAlignment="Stretch" Margin="40 40 40 0" Text="Controller Type"
                                       TextAlignment="Center" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="20 20 20 0"
                                      SelectedItem="{Binding DeviceType}" Items="{Binding DeviceControllerTypes}">
                            </ComboBox>
                        </StackPanel>
                        <StackPanel>
                            <StackPanel.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="IsRhythm" />
                                    <Binding Path="IsController" />
                                </MultiBinding>
                            </StackPanel.IsVisible>
                            <TextBlock HorizontalAlignment="Stretch" Margin="40 40 40 0" Text="Rhythm Game Type"
                                       TextAlignment="Center" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="20 20 20 0"
                                      SelectedItem="{Binding RhythmType}" Items="{Binding RhythmTypes}">
                            </ComboBox>
                        </StackPanel>
                        <StackPanel>
                            <TextBlock HorizontalAlignment="Stretch" Margin="40 40 40 0" Text="LED Type"
                                       TextAlignment="Center" />
                            <ComboBox HorizontalAlignment="Stretch" Margin="20 20 20 0"
                                      SelectedItem="{Binding LedType}" Items="{Binding LedTypes}">
                            </ComboBox>
                        </StackPanel>
                        <Button x:CompileBindings="False" Command="{Binding AddOutput}" HorizontalAlignment="Stretch"
                                HorizontalContentAlignment="Center" Margin="20 20 20 0">
                            Add Binding
                        </Button>
                        <Button x:CompileBindings="False" Command="{Binding ClearOutputs}"
                                HorizontalAlignment="Stretch" HorizontalContentAlignment="Center" Margin="20 20 20 0">
                            Clear
                        </Button>
                    </StackPanel>
                </ScrollViewer>
            </ExperimentalAcrylicBorder>
            <ExperimentalAcrylicBorder DockPanel.Dock="Bottom">
                <ExperimentalAcrylicBorder.Material>
                    <ExperimentalAcrylicMaterial TintColor="#222222" MaterialOpacity="0.85" TintOpacity="1" />
                </ExperimentalAcrylicBorder.Material>
                <StackPanel>
                    <WrapPanel Margin="10" HorizontalAlignment="Center">
                        <Button Content="Write Configuration" Command="{Binding WriteConfig}" />
                        <Button x:CompileBindings="False" Content="Revert device to Arduino" Command="{Binding Reset}" />
                        <Button Content="Configure another device" Command="{Binding GoBack}" />
                    </WrapPanel>
                    <WrapPanel HorizontalAlignment="Center">
                        <TextBlock Text="Status: " />
                        <TextBlock Text="{Binding Main.Message}" />
                    </WrapPanel>
                    <ProgressBar HorizontalAlignment="Stretch" ShowProgressText="True" Name="RunProgress"
                                 Foreground="{Binding Main.ProgressbarColor}" Value="{Binding Main.Progress}"
                                 IsIndeterminate="False" Minimum="0" Maximum="100" Height="30" />
                </StackPanel>
            </ExperimentalAcrylicBorder>
            <ExperimentalAcrylicBorder>
                <ExperimentalAcrylicBorder.Material>
                    <ExperimentalAcrylicMaterial TintColor="#222222" MaterialOpacity="0.85" TintOpacity="1" />
                </ExperimentalAcrylicBorder.Material>
                <ScrollViewer VerticalContentAlignment="Center">
                    <ItemsRepeater Items="{Binding Bindings}">
                        <ItemsRepeater.ItemTemplate>
                            <DataTemplate DataType="output:Output">
                                <WrapPanel Background="Black" Margin="20 20 20 0">
                                    <Image ToolTip.Tip="{Binding LocalisedName}"
                                           HorizontalAlignment="Center" Width="75"
                                           Source="{Binding Image}">
                                    </Image>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.IsVisible>
                                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                <Binding Path="Input"
                                                         Converter="{x:Static  ObjectConverters.IsNotNull}" />
                                                <Binding Path="!IsCombined" />
                                            </MultiBinding>
                                        </StackPanel.IsVisible>
                                        <ComboBox VerticalAlignment="Center"
                                                  SelectedItem="{Binding SelectedInputType}"
                                                  Items="{Binding InputTypes}">
                                        </ComboBox>
                                        <ComboBox VerticalAlignment="Center" IsVisible="{Binding IsWii}"
                                                  SelectedItem="{Binding WiiInputType}"
                                                  Items="{Binding WiiInputTypes}">
                                        </ComboBox>
                                        <ComboBox VerticalAlignment="Center" IsVisible="{Binding IsDj}"
                                                  SelectedItem="{Binding DjInputType}"
                                                  Items="{Binding DjInputTypes}">
                                        </ComboBox>
                                        <ComboBox VerticalAlignment="Center" IsVisible="{Binding IsPs2}"
                                                  SelectedItem="{Binding Ps2InputType}"
                                                  Items="{Binding Ps2InputTypes}">
                                        </ComboBox>
                                        <ComboBox VerticalAlignment="Center" IsVisible="{Binding IsGh5}"
                                                  SelectedItem="{Binding Gh5NeckInputType}"
                                                  Items="{Binding Gh5NeckInputTypes}">
                                        </ComboBox>
                                        <ComboBox VerticalAlignment="Center" IsVisible="{Binding IsWt}"
                                                  SelectedItem="{Binding GhWtInputType}"
                                                  Items="{Binding GhWtInputTypes}">
                                        </ComboBox>
                                    </StackPanel>
                                    <ContentControl Content="{Binding}"
                                                    ContentTemplate="{StaticResource OutputTemplates}">
                                    </ContentControl>
                                    <ContentControl Content="{Binding Input}"
                                                    ContentTemplate="{StaticResource OutputTemplates}">
                                    </ContentControl>
                                    <StackPanel Orientation="Horizontal">
                                        <StackPanel.IsVisible>
                                            <MultiBinding Converter="{x:Static BoolConverters.And}">
                                                <Binding Path="AreLedsEnabled" />
                                                <Binding Path="!IsCombined" />
                                            </MultiBinding>
                                        </StackPanel.IsVisible>
                                        <NumericUpDown Value="{Binding LedIndex}" VerticalAlignment="Center"></NumericUpDown>
                                        <ColorPicker Color="{Binding LedOn}"></ColorPicker>
                                        <ColorPicker Color="{Binding LedOff}"></ColorPicker>
                                    </StackPanel>
                                    <Button
                                        x:CompileBindings="False"
                                        Command="{Binding Remove}">
                                        Remove
                                    </Button>
                                </WrapPanel>
                            </DataTemplate>
                        </ItemsRepeater.ItemTemplate>
                    </ItemsRepeater>
                </ScrollViewer>
            </ExperimentalAcrylicBorder>
        </DockPanel>
    </Panel>
</UserControl>